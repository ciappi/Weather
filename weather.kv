#: import main main
#: import ListAdapter kivy.adapters.listadapter.ListAdapter


WeatherRoot:


<WeatherRoot>:
    carousel: carousel
    orientation: "vertical"
    ActionBar:
        ActionView:
            use_separator: True
            ActionPrevious:
                title: "Weather"
                with_previous: False
            ActionButton:
                text: "+"
                on_press: app.root.show_add_location_form()
            ActionButton:
                text: "-"
                on_press: app.root.remove_location()
            ActionToggleButton:
                state: "down"
                text: "°C"
                group: "unit"
                allow_no_selection: False
                on_press: app.config.set("General", "temp_type", "metric"); app.config.write(); root.update_weather()
            ActionToggleButton:
                text: "°F"
                group: "unit"
                allow_no_selection: False
                on_press: app.config.set("General", "temp_type", "imperial"); app.config.write(); root.update_weather()
    Carousel:
        id: carousel


<LocationButton>:
    text: "{} ({})".format(self.location[0], self.location[1])
    height: "40dp"
    size_hint_y: None 
    on_press: app.root.add_location(self.location)


<AddLocationForm>:
    search_input: search_box
    search_results: search_results_list
    orientation: "vertical"
    BoxLayout:
        height: "40dp"
        size_hint_y: None
        TextInput:
            id: search_box
            size_hint_x: 90
            focus: True
            multiline: False
            on_text_validate: root.search_location()
        Button:
            text: "S"
            size_hint_x: 5
            on_press: root.search_location()
        Button:
            text: "GPS"
            size_hint_x: 5
            on_press: root.search_coordinates()
    ListView:
        id: search_results_list
        adapter:
            ListAdapter(data=[], cls=main.LocationButton, args_converter=main.locations_args_converter)


<WeatherPage>:
    orientation: "vertical"
    forecast_panel: forecast_panel
    condition_image: ""
    conditions: ""
    Label:
        text: "{} ({})".format(root.location[0], root.location[1])
        font_size: "50dp"
    Label:
        text: "{:.0f}".format(root.temp)
        font_size: "80dp"
    BoxLayout:
        orientation: "horizontal"
        BoxLayout:
            orientation: "vertical"
            Label:
                text: "{}".format(root.conditions)
                font_size: "20dp"
            AsyncImage:
                source: root.condition_image
                allow_stretch: False
        Label:
            text: "Temp min: {:.0f}\nTemp max: {:.0f}\nHumidity: {:.0f} %\nPressure: {:.0f} hPa".format(root.temp_min, root.temp_max, root.humidity, root.pressure)
    Label:
        size_hint_y: .3
    BoxLayout:
        id: forecast_panel
        orientation: "horizontal"


<ForecastBox@BoxLayout>:
    orientation: "vertical"
    temp_day: 0
    conditions_image: ""
    date: ""
    Label:
        text: "{}".format(root.date)
    AsyncImage:
        source: root.conditions_image
    Label:
        text: "{:.0f}".format(root.temp_day)
