#: import main main
#: import ListAdapter kivy.adapters.listadapter.ListAdapter


WeatherRoot:


<WeatherRoot>:
    carousel: carousel
    Carousel:
        id: carousel


<ForecastLabel@BoxLayout>:
    date: ""
    conditions_image: ""
    conditions: ""
    temp_min: None
    temp_max: None
    canvas.before:
        Color:
            rgb: [0.2, 0.2, 0.2]
        Line:
            points: [self.pos[0], self.pos[1], self.width, self.pos[1]]
    Label:
        text: root.date
    BoxLayout:
        orientation: "vertical"
        AsyncImage:
            source: root.conditions_image
        Label:
            text: root.conditions
    BoxLayout:
        orientation: "vertical"
        Label:
            text: "Low {}".format(root.temp_min)
        Label:
            text: "High {}".format(root.temp_max)


<Forecast>:
    forecast_container: forecast_container
    orientation: "vertical"
    Label:
        size_hint_y: 0.1
        font_size: "30dp"
        text: "{} ({})".format(root.location[0], root.location[1])
    BoxLayout:
        orientation: "vertical"
        id: forecast_container


<Locations@BoxLayout>:
    orientation: "vertical"
    locations_list: locations_list
    ListView:
        id: locations_list
        adapter:
            ListAdapter(data=[], cls=main.LocationButton, args_converter=main.locations_args_converter)


<LocationButton>:
    text: "{} ({})".format(self.location[0], self.location[1])
    height: "40dp"
    size_hint_y: None 
    on_press: app.root.change_location(self.location)


<AddLocationForm>:
    search_input: search_box
    search_results: search_results_list
    BoxLayout:
        orientation: "vertical"
        BoxLayout:
            height: "40dp"
            size_hint_y: None
            TextInput:
                id: search_box
                size_hint_x: 50
                focus: True
                multiline: False
                on_text_validate: root.search_location()
            Button:
                text: "Search"
                size_hint_x: 25
                on_press: root.search_location()
            Button:
                text: "Current Location"
                size_hint_x: 25
                on_press: root.search_coordinates()
        ListView:
            id: search_results_list
            adapter:
                ListAdapter(data=[], cls=main.LocationButton, args_converter=main.locations_args_converter)
        Button:
            height: "40dp"
            size_hint_y: None
            text: "Cancel"
            on_press: root.dismiss()


<CurrentWeather>:
    orientation: "vertical"
    BoxLayout:
        Label:
            text: "{} ({})".format(root.location[0], root.location[1])
            font_size: "30dp"
        Label:
            text: "{}".format(root.temp)
    Label:
        text: root.conditions
    BoxLayout:
        orientation: "horizontal"
        Label:
            text: "Low: {}".format(root.temp_min)
        Label:
            text: "High: {}".format(root.temp_max)


<WeatherPage>:
    orientation: "vertical"
    forecast_panel: forecast_panel
    condition_image: ""
    Label:
        text: "{} ({})".format(root.location[0], root.location[1])
        font_size: "50dp"
    AsyncImage:
        source: root.condition_image
        allow_stretch: True
    Label:
        text: "{:.0f}".format(root.temp)
        font_size: "80dp"
    BoxLayout:
        id: forecast_panel
        orientation: "horizontal"
    


<ForecastBox@BoxLayout>:
    orientation: "vertical"
    temp_day: 0
    conditions_image: ""
    date: ""
    Label:
        text: "{}".format(root.date)
    AsyncImage:
        source: root.conditions_image
    Label:
        text: "{:.0f}".format(root.temp_day)
